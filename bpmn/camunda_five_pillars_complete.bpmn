<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL"
                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
                  xmlns:di="http://www.omg.org/spec/DD/20100524/DI"
                  xmlns:dspy="http://autotel.ai/dspy"
                  xmlns:shacl="http://www.w3.org/ns/shacl#"
                  xmlns:owl="http://www.w3.org/2002/07/owl#"
                  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                  xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
                  xmlns:camunda="http://camunda.org/schema/1.0/bpmn"
                  xmlns:modeler="http://camunda.org/schema/modeler/1.0"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  id="Definitions_CamundaFivePillars"
                  targetNamespace="http://bpmn.io/schema/bpmn"
                  exporter="Camunda Modeler"
                  exporterVersion="4.11.1"
                  modeler:executionPlatform="Camunda Platform"
                  modeler:executionPlatformVersion="7.15.0">

  <!-- Five Pillars Integration -->
  
  <!-- 1. DSPy Signatures -->
  <dspy:signatures>
    <dspy:signature name="customer_analysis" description="Analyze customer data with AI">
      <dspy:input name="customer_data" description="Customer information" shaclShape="http://autotel.ai/shapes#CustomerShape" />
      <dspy:input name="risk_factors" description="Risk assessment factors" shaclShape="http://autotel.ai/shapes#RiskShape" />
      <dspy:output name="analysis_result" description="AI analysis result" shaclShape="http://autotel.ai/shapes#AnalysisShape" />
      <dspy:output name="recommendation" description="AI recommendation" shaclShape="http://autotel.ai/shapes#RecommendationShape" />
    </dspy:signature>
    
    <dspy:signature name="fraud_detection" description="Detect potential fraud with AI">
      <dspy:input name="transaction_data" description="Transaction information" shaclShape="http://autotel.ai/shapes#TransactionShape" />
      <dspy:output name="fraud_score" description="Fraud risk score" shaclShape="http://autotel.ai/shapes#ScoreShape" />
      <dspy:output name="fraud_indicators" description="Fraud indicators" shaclShape="http://autotel.ai/shapes#IndicatorsShape" />
    </dspy:signature>
    
    <dspy:signature name="create_transaction_instances" description="Create multiple concurrent transaction workflow instances">
      <dspy:input name="customer_data" description="Customer information" shaclShape="http://autotel.ai/shapes#CustomerShape" />
      <dspy:input name="transaction_count" description="Number of transaction instances to create" />
      <dspy:output name="transaction_instances" description="List of created transaction instance IDs" />
      <dspy:output name="instance_count" description="Number of instances created" />
    </dspy:signature>
  </dspy:signatures>

  <!-- 2. SHACL Shapes -->
  <shacl:shapes>
    <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
             xmlns:shacl="http://www.w3.org/ns/shacl#"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema#">
      
      <shacl:NodeShape rdf:about="http://autotel.ai/shapes#CustomerShape">
        <shacl:property>
          <shacl:PropertyShape>
            <shacl:path rdf:resource="http://autotel.ai/props#customerId"/>
            <shacl:datatype rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
            <shacl:minCount>1</shacl:minCount>
          </shacl:PropertyShape>
        </shacl:property>
        <shacl:property>
          <shacl:PropertyShape>
            <shacl:path rdf:resource="http://autotel.ai/props#customerName"/>
            <shacl:datatype rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
            <shacl:minCount>1</shacl:minCount>
          </shacl:PropertyShape>
        </shacl:property>
      </shacl:NodeShape>

      <shacl:NodeShape rdf:about="http://autotel.ai/shapes#TransactionShape">
        <shacl:property>
          <shacl:PropertyShape>
            <shacl:path rdf:resource="http://autotel.ai/props#amount"/>
            <shacl:datatype rdf:resource="http://www.w3.org/2001/XMLSchema#decimal"/>
            <shacl:minInclusive rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">0.01</shacl:minInclusive>
          </shacl:PropertyShape>
        </shacl:property>
      </shacl:NodeShape>
    </rdf:RDF>
  </shacl:shapes>

  <!-- 3. OWL Ontology -->
  <owl:Ontology rdf:about="http://autotel.ai/ontology#WorkflowOntology">
    <owl:imports rdf:resource="http://www.w3.org/2002/07/owl"/>
    
    <owl:Class rdf:about="http://autotel.ai/ontology#Customer">
      <rdfs:subClassOf rdf:resource="http://autotel.ai/ontology#Entity"/>
    </owl:Class>
    
    <owl:Class rdf:about="http://autotel.ai/ontology#Transaction">
      <rdfs:subClassOf rdf:resource="http://autotel.ai/ontology#Entity"/>
    </owl:Class>
    
    <owl:ObjectProperty rdf:about="http://autotel.ai/ontology#hasCustomer">
      <rdfs:domain rdf:resource="http://autotel.ai/ontology#Transaction"/>
      <rdfs:range rdf:resource="http://autotel.ai/ontology#Customer"/>
    </owl:ObjectProperty>
  </owl:Ontology>

  <!-- 4. DMN Decision Table -->
  <dmn:definitions xmlns:dmn="http://www.omg.org/spec/DMN/20191111/MODEL/"
                   xmlns:camunda="http://camunda.org/schema/1.0/dmn"
                   id="Definitions_ApprovalDecision"
                   name="Approval Decision"
                   namespace="http://camunda.org/schema/1.0/dmn"
                   exporter="Camunda Modeler"
                   exporterVersion="4.11.1">
    
    <dmn:decision id="ApprovalDecision" name="Approval Decision">
      <dmn:decisionTable id="DecisionTable_Approval" hitPolicy="UNIQUE">
        <dmn:input id="Input_1" label="Customer Score">
          <dmn:inputExpression id="InputExpression_1" typeRef="double">
            <dmn:text>customerScore</dmn:text>
          </dmn:inputExpression>
        </dmn:input>
        <dmn:input id="Input_2" label="Transaction Amount">
          <dmn:inputExpression id="InputExpression_2" typeRef="double">
            <dmn:text>transactionAmount</dmn:text>
          </dmn:inputExpression>
        </dmn:input>
        <dmn:output id="Output_1" label="Approval Decision" typeRef="string"/>
        <dmn:output id="Output_2" label="Risk Level" typeRef="string"/>
        
        <dmn:rule id="Rule_1">
          <dmn:inputEntry id="InputEntry_1">
            <dmn:text>&gt;= 750</dmn:text>
          </dmn:inputEntry>
          <dmn:inputEntry id="InputEntry_2">
            <dmn:text>&lt;= 10000</dmn:text>
          </dmn:inputEntry>
          <dmn:outputEntry id="OutputEntry_1">
            <dmn:text>"APPROVED"</dmn:text>
          </dmn:outputEntry>
          <dmn:outputEntry id="OutputEntry_2">
            <dmn:text>"LOW"</dmn:text>
          </dmn:outputEntry>
        </dmn:rule>
        
        <dmn:rule id="Rule_2">
          <dmn:inputEntry id="InputEntry_3">
            <dmn:text>&lt; 750</dmn:text>
          </dmn:inputEntry>
          <dmn:inputEntry id="InputEntry_4">
            <dmn:text>-</dmn:text>
          </dmn:inputEntry>
          <dmn:outputEntry id="OutputEntry_3">
            <dmn:text>"REJECTED"</dmn:text>
          </dmn:outputEntry>
          <dmn:outputEntry id="OutputEntry_4">
            <dmn:text>"HIGH"</dmn:text>
          </dmn:outputEntry>
        </dmn:rule>
      </dmn:decisionTable>
    </dmn:decision>
  </dmn:definitions>

  <!-- 5. Main BPMN Process with All Camunda Tags -->
  <bpmn:process id="CamundaFivePillarsProcess" 
                isExecutable="true" 
                camunda:versionTag="1.0"
                camunda:historyTimeToLive="30">

    <!-- Start Event -->
    <bpmn:startEvent id="StartEvent_1" name="Customer Transaction Start">
      <bpmn:outgoing>Flow_1</bpmn:outgoing>
    </bpmn:startEvent>

    <!-- User Task with Camunda Form -->
    <bpmn:userTask id="UserTask_CustomerInfo" 
                   name="Enter Customer Information" 
                   camunda:formKey="customer_info_form"
                   camunda:assignee="customer_service">
      <bpmn:extensionElements>
        <camunda:formData>
          <camunda:formField id="customer_name" 
                            label="Customer Name" 
                            type="string" 
                            defaultValue="John Doe" />
          <camunda:formField id="customer_email" 
                            label="Email Address" 
                            type="string" />
          <camunda:formField id="customer_type" 
                            label="Customer Type" 
                            type="enum" 
                            defaultValue="individual">
            <camunda:value id="individual" name="Individual" />
            <camunda:value id="business" name="Business" />
            <camunda:value id="premium" name="Premium" />
          </camunda:formField>
        </camunda:formData>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1</bpmn:incoming>
      <bpmn:outgoing>Flow_2</bpmn:outgoing>
    </bpmn:userTask>

    <!-- Service Task with DSPy -->
    <bpmn:serviceTask id="ServiceTask_CustomerAnalysis" 
                      name="AI Customer Analysis">
      <bpmn:extensionElements>
        <dspy:service name="customer_analysis" 
                      signature="customer_analysis" 
                      result="analysis_result">
          <dspy:param name="customer_data" value="customer_name" />
          <dspy:param name="risk_factors" value="customer_type" />
        </dspy:service>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_2</bpmn:incoming>
      <bpmn:outgoing>Flow_3</bpmn:outgoing>
    </bpmn:serviceTask>

    <!-- Service Task to Create Multiple Transaction Instances -->
    <bpmn:serviceTask id="ServiceTask_CreateTransactions" 
                      name="Create Transaction Instances">
      <bpmn:extensionElements>
        <dspy:service name="create_transaction_instances" 
                      signature="create_transaction_instances" 
                      result="transaction_instances">
          <dspy:param name="customer_data" value="customer_name" />
          <dspy:param name="transaction_count" value="3" />
        </dspy:service>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_3</bpmn:incoming>
      <bpmn:outgoing>Flow_4</bpmn:outgoing>
    </bpmn:serviceTask>

    <!-- User Task for Single Transaction Details -->
    <bpmn:userTask id="UserTask_TransactionDetails" 
                   name="Enter Transaction Details" 
                   camunda:formKey="transaction_form">
      <bpmn:extensionElements>
        <camunda:formData>
          <camunda:formField id="transaction_amount" 
                            label="Transaction Amount" 
                            type="double" />
          <camunda:formField id="transaction_type" 
                            label="Transaction Type" 
                            type="enum" 
                            defaultValue="purchase">
            <camunda:value id="purchase" name="Purchase" />
            <camunda:value id="transfer" name="Transfer" />
            <camunda:value id="withdrawal" name="Withdrawal" />
          </camunda:formField>
          <camunda:formField id="merchant_name" 
                            label="Merchant Name" 
                            type="string" />
        </camunda:formData>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_4</bpmn:incoming>
      <bpmn:outgoing>Flow_5</bpmn:outgoing>
    </bpmn:userTask>

    <!-- Service Task with DSPy Fraud Detection -->
    <bpmn:serviceTask id="ServiceTask_FraudDetection" 
                      name="AI Fraud Detection">
      <bpmn:extensionElements>
        <dspy:service name="fraud_detection" 
                      signature="fraud_detection" 
                      result="fraud_result">
          <dspy:param name="transaction_data" value="transaction" />
        </dspy:service>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_5</bpmn:incoming>
      <bpmn:outgoing>Flow_6</bpmn:outgoing>
    </bpmn:serviceTask>

    <!-- Business Rule Task with DMN -->
    <bpmn:businessRuleTask id="BusinessRuleTask_Approval" 
                           name="Approval Decision" 
                           camunda:decisionRef="ApprovalDecision">
      <bpmn:incoming>Flow_6</bpmn:incoming>
      <bpmn:outgoing>Flow_7</bpmn:outgoing>
    </bpmn:businessRuleTask>

    <!-- Exclusive Gateway -->
    <bpmn:exclusiveGateway id="Gateway_ApprovalCheck" 
                           name="Approval Check">
      <bpmn:incoming>Flow_7</bpmn:incoming>
      <bpmn:outgoing>Flow_8</bpmn:outgoing>
      <bpmn:outgoing>Flow_9</bpmn:outgoing>
    </bpmn:exclusiveGateway>

    <!-- User Task for Manual Review -->
    <bpmn:userTask id="UserTask_ManualReview" 
                   name="Manual Review Required" 
                   camunda:formKey="review_form"
                   camunda:candidateGroups="reviewers">
      <bpmn:extensionElements>
        <camunda:formData>
          <camunda:formField id="review_decision" 
                            label="Review Decision" 
                            type="enum" 
                            defaultValue="pending">
            <camunda:value id="approved" name="Approve" />
            <camunda:value id="rejected" name="Reject" />
            <camunda:value id="pending" name="Request More Info" />
          </camunda:formField>
          <camunda:formField id="review_notes" 
                            label="Review Notes" 
                            type="string" />
        </camunda:formData>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_8</bpmn:incoming>
      <bpmn:outgoing>Flow_10</bpmn:outgoing>
    </bpmn:userTask>

    <!-- Script Task with Camunda Expression -->
    <bpmn:scriptTask id="ScriptTask_ProcessResult" 
                     name="Process Final Result">
      <bpmn:script>
        <![CDATA[
          // Process the final result
          var finalDecision = review_decision || approvalDecision;
          var riskLevel = riskLevel || 'MEDIUM';
          
          // Set process variables
          execution.setVariable('finalDecision', finalDecision);
          execution.setVariable('riskLevel', riskLevel);
          execution.setVariable('processedAt', new Date());
        ]]>
      </bpmn:script>
      <bpmn:incoming>Flow_9</bpmn:incoming>
      <bpmn:incoming>Flow_10</bpmn:incoming>
      <bpmn:outgoing>Flow_11</bpmn:outgoing>
    </bpmn:scriptTask>

    <!-- User Task for Final Confirmation -->
    <bpmn:userTask id="UserTask_FinalConfirmation" 
                   name="Final Customer Confirmation" 
                   camunda:formKey="confirmation_form"
                   camunda:assignee="${customer_email}">
      <bpmn:extensionElements>
        <camunda:formData>
          <camunda:formField id="customer_confirmation" 
                            label="Confirm Transaction" 
                            type="enum" 
                            defaultValue="pending">
            <camunda:value id="confirmed" name="Confirm" />
            <camunda:value id="cancelled" name="Cancel" />
          </camunda:formField>
          <camunda:formField id="confirmation_notes" 
                            label="Additional Notes" 
                            type="string" />
        </camunda:formData>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_11</bpmn:incoming>
      <bpmn:outgoing>Flow_12</bpmn:outgoing>
    </bpmn:userTask>

    <!-- End Event -->
    <bpmn:endEvent id="EndEvent_1" name="Transaction Complete">
      <bpmn:incoming>Flow_12</bpmn:incoming>
    </bpmn:endEvent>

    <!-- Sequence Flows -->
    <bpmn:sequenceFlow id="Flow_1" sourceRef="StartEvent_1" targetRef="UserTask_CustomerInfo" />
    <bpmn:sequenceFlow id="Flow_2" sourceRef="UserTask_CustomerInfo" targetRef="ServiceTask_CustomerAnalysis" />
    <bpmn:sequenceFlow id="Flow_3" sourceRef="ServiceTask_CustomerAnalysis" targetRef="ServiceTask_CreateTransactions" />
    <bpmn:sequenceFlow id="Flow_4" sourceRef="ServiceTask_CreateTransactions" targetRef="UserTask_TransactionDetails" />
    <bpmn:sequenceFlow id="Flow_5" sourceRef="UserTask_TransactionDetails" targetRef="ServiceTask_FraudDetection" />
    <bpmn:sequenceFlow id="Flow_6" sourceRef="ServiceTask_FraudDetection" targetRef="BusinessRuleTask_Approval" />
    <bpmn:sequenceFlow id="Flow_7" sourceRef="BusinessRuleTask_Approval" targetRef="Gateway_ApprovalCheck" />
    
    <bpmn:sequenceFlow id="Flow_8" sourceRef="Gateway_ApprovalCheck" targetRef="UserTask_ManualReview">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">
        <![CDATA[${approvalDecision == 'REJECTED' || fraud_score > 0.7}]]>
      </bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    
    <bpmn:sequenceFlow id="Flow_9" sourceRef="Gateway_ApprovalCheck" targetRef="ScriptTask_ProcessResult">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">
        <![CDATA[${approvalDecision == 'APPROVED' && fraud_score <= 0.7}]]>
      </bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    
    <bpmn:sequenceFlow id="Flow_10" sourceRef="UserTask_ManualReview" targetRef="ScriptTask_ProcessResult" />
    <bpmn:sequenceFlow id="Flow_11" sourceRef="ScriptTask_ProcessResult" targetRef="UserTask_FinalConfirmation" />
    <bpmn:sequenceFlow id="Flow_12" sourceRef="UserTask_FinalConfirmation" targetRef="EndEvent_1" />

  </bpmn:process>

  <!-- BPMN Diagram -->
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="CamundaFivePillarsProcess">
      <!-- Diagram elements would go here -->
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>

</bpmn:definitions> 