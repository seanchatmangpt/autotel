File: ttl_bitactor_demo.c

Purpose:
This file serves as a comprehensive demonstration of the TTL-to-BitActor compilation and execution pipeline. It showcases how a system defined in Turtle (TTL) can be parsed, compiled (AOT), optimized (e.g., Dark 80/20), deployed, and executed within the specified 7-tick constraints. It orchestrates the interaction between the TTL compiler, the BitActor matrix, and the meta-probe telemetry.

CNS Integration Recommendation:

This file is purely a **Demonstration/Example** and should **NOT** be part of the core CNS framework or AOT-generated code. It is designed to illustrate the end-to-end capabilities of the CNS and BitActor system.

*   **Do NOT include in CNS build:** This is a high-level demo application, not a reusable library component or code generated by the AOT compiler. Its primary role is to demonstrate the system's functionality.
*   **Use for demonstration and integration testing:** It is invaluable for showcasing the CNS's ability to translate semantic specifications into executable code and for verifying the integration of various CNS components (AOT compiler, BitActor runtime, telemetry).
*   **Remove from production builds:** This file should be explicitly excluded from any production CNS or BitActor compilation to avoid including demo-specific logic and overhead.
*   **Its logic highlights AOT compiler requirements:** The functions called within this demo (e.g., `ttl_bitactor_compiler_create`, `ttl_bitactor_parse`, `ttl_bitactor_compile`, `ttl_apply_dark_80_20`, `ttl_validate_specification_equals_execution`, `ttl_bitactor_deploy`, `ttl_bitactor_execute`) define the expected interface and capabilities of the AOT compiler and the BitActor deployment process. These are the functionalities that the AOT compiler and CNS framework must provide.