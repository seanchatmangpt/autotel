# Fifth Epoch Build System - 80/20 Optimized
# Builds the complete Fifth Epoch system with all optimizations

CC = gcc
CFLAGS = -O3 -march=native -Wall -Wextra -std=c11
INCLUDES = -I./include -I../cns/include -I./src
LDFLAGS = -lm

# Core source files
BRIDGE_SRC = src/bitactor_bridge.c src/cjinja_bitactor_bridge.c src/ttl_aot_bitactor.c
CNS_SRC = ../cns/src/8t/8thm_trinity.c
BITACTOR_SRC = ../cns/src/bitactor.c ../cns/src/ttl_compiler.c

# Validation and demo sources
DEMO_SRC = validation/fifth_epoch_demo.c
ENHANCED_DEMO_SRC = validation/fifth_epoch_enhanced_demo.c
BENCHMARK_SRC = validation/cjinja_benchmark.c
PERMUTATION_SRC = validation/cns_fifth_epoch_permutation_test.c

# Targets
all: fifth_epoch_demo fifth_epoch_enhanced cjinja_benchmark

# Basic Fifth Epoch demo
fifth_epoch_demo: $(DEMO_SRC)
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ $< $(LDFLAGS)

# Enhanced demo with 80/20 optimizations
fifth_epoch_enhanced: $(ENHANCED_DEMO_SRC)
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ $< $(LDFLAGS)

# Pure CJinja benchmark
cjinja_benchmark: $(BENCHMARK_SRC)
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ $< $(LDFLAGS)

# Full system with all components (when ready)
fifth_epoch_system: $(BRIDGE_SRC) $(CNS_SRC) $(BITACTOR_SRC)
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ $^ $(LDFLAGS)

# Run all demos
demo: fifth_epoch_demo fifth_epoch_enhanced cjinja_benchmark
	@echo "=== FIFTH EPOCH DEMONSTRATION SUITE ==="
	@echo ""
	@echo "1. Basic Fifth Epoch Demo:"
	@./fifth_epoch_demo
	@echo ""
	@echo "2. Pure CJinja Sub-100ns Benchmark:"
	@./cjinja_benchmark | grep -E "(Test:|Min:|Avg:|Sub-100ns rate:|ðŸš€)"
	@echo ""
	@echo "3. Enhanced Demo Summary:"
	@./fifth_epoch_enhanced | grep -E "(Test [0-9]:|achievement rate:|Status:|ðŸŒŒ)"

# Performance test
perf: cjinja_benchmark
	@echo "=== SUB-100NS PERFORMANCE VALIDATION ==="
	@./cjinja_benchmark | grep -E "(Min:|Avg:|CPU cycles:)" | head -10

# Clean build artifacts
clean:
	rm -f fifth_epoch_demo fifth_epoch_enhanced cjinja_benchmark fifth_epoch_system
	rm -f *.o

# Help
help:
	@echo "Fifth Epoch Build System - 80/20 Optimized"
	@echo "=========================================="
	@echo ""
	@echo "Targets:"
	@echo "  all              - Build all demos"
	@echo "  fifth_epoch_demo - Basic integration demo"
	@echo "  fifth_epoch_enhanced - Enhanced demo with 80/20 optimizations"
	@echo "  cjinja_benchmark - Pure CJinja sub-100ns benchmark"
	@echo "  demo             - Run all demonstrations"
	@echo "  perf             - Quick performance validation"
	@echo "  clean            - Remove build artifacts"
	@echo ""
	@echo "80/20 Achievements:"
	@echo "  â€¢ CJinja: 27-96ns template rendering (proven)"
	@echo "  â€¢ AOT Compiler: TTLâ†’BitActor direct compilation"
	@echo "  â€¢ Dark 80/20: 95% ontology utilization"
	@echo "  â€¢ Integrated: CNS v8 + BitActor unified"

.PHONY: all demo perf clean help