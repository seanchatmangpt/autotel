# CNS 8H Reasoning Engine Makefile
# Build configuration for the 8-hop cognitive cycle

CC = clang
CFLAGS = -Wall -Wextra -O3 -march=native -std=c11
CFLAGS += -I../../include -I../.. -I.
CFLAGS += -DCNS_8H_TEST
LDFLAGS = -lm -lpthread

# Enable all optimizations for 8-tick compliance
CFLAGS += -ffast-math -funroll-loops -ftree-vectorize
CFLAGS += -mavx2 -mfma

# Source files
SRCS = cns_8h_reasoning.c
TEST_SRCS = test_8h_reasoning.c
OBJS = $(SRCS:.c=.o)

# Targets
TARGETS = test_8h_reasoning cns_8h_standalone

.PHONY: all clean test benchmark

all: $(TARGETS)

# Standalone 8H reasoning test
cns_8h_standalone: cns_8h_reasoning.c
	$(CC) $(CFLAGS) -DCNS_8H_TEST $< -o $@ $(LDFLAGS)

# Comprehensive test suite
test_8h_reasoning: test_8h_reasoning.c
	$(CC) $(CFLAGS) $< -o $@ $(LDFLAGS)

# Run tests
test: test_8h_reasoning
	./test_8h_reasoning

# Run standalone test
run-standalone: cns_8h_standalone
	./cns_8h_standalone

# Performance benchmark
benchmark: cns_8h_standalone
	@echo "Running 8H performance benchmark..."
	@time ./cns_8h_standalone
	@echo ""
	@echo "Analyzing cycle counts..."
	@./cns_8h_standalone | grep -E "(cycles|ticks)"

# Clean build artifacts
clean:
	rm -f $(OBJS) $(TARGETS) *.o

# Help
help:
	@echo "CNS 8H Reasoning Engine Build Targets:"
	@echo "  make all          - Build all targets"
	@echo "  make test         - Run comprehensive test suite"
	@echo "  make run-standalone - Run standalone 8H demo"
	@echo "  make benchmark    - Run performance benchmarks"
	@echo "  make clean        - Clean build artifacts"
	@echo "  make help         - Show this help message"