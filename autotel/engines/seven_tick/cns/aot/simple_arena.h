#ifndef simple_arena_ARENA_H
#define simple_arena_ARENA_H

// Generated by ARENAC AOT Code Generator
// Total arena size: 8388608 bytes (8.00 MB)

#include <stddef.h>
#include <stdint.h>

typedef struct {
    char* beg;
    char* end;
    char* pos;
} arena_t;

// Static arena storage (8388608 bytes)
static char simple_arena_storage[8388608] __attribute__((aligned(16)));

// Arena instance
static arena_t simple_arena = {
    .beg = simple_arena_storage,
    .end = simple_arena_storage + sizeof(simple_arena_storage),
    .pos = simple_arena_storage
};

// Arena allocation function
static inline void* simple_arena_alloc(arena_t* arena, size_t size, size_t align) {
    if (!arena || size == 0) return NULL;
    
    // Align current position
    uintptr_t pos = (uintptr_t)arena->pos;
    uintptr_t aligned = (pos + align - 1) & ~(align - 1);
    char* result = (char*)aligned;
    
    // Check bounds
    if (result + size > arena->end) return NULL;
    
    arena->pos = result + size;
    return result;
}

// Arena reset function
static inline void simple_arena_reset(arena_t* arena) {
    if (!arena) return;
    arena->pos = arena->beg;
}

// Available space function
static inline size_t simple_arena_available(arena_t* arena) {
    if (!arena) return 0;
    return arena->end - arena->pos;
}

#endif // simple_arena_ARENA_H
