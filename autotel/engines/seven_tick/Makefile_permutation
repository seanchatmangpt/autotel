# Makefile for Comprehensive Permutation Testing
# CNS v8 Architecture - Automated Build System

# Compiler settings
CC = gcc
CFLAGS = -O3 -march=native -flto -Wall -Wextra -std=c99 -DNDEBUG
INCLUDES = -I./include -I./cns/include
LIBS = -lm

# Directories
SRC_DIR = validation
BUILD_DIR = build
BIN_DIR = bin

# Source files
PERMUTATION_HEADER = $(SRC_DIR)/permutation_tests.h
COMPREHENSIVE_TEST = $(SRC_DIR)/test_all_permutations.c
QUICK_TEST = $(SRC_DIR)/cns_quick_permutation_test.c
PRECISE_BENCHMARK = $(SRC_DIR)/precise_benchmark.c

# Executables
COMPREHENSIVE_EXEC = $(BIN_DIR)/test_all_permutations
QUICK_EXEC = $(BIN_DIR)/quick_permutation_test
PRECISE_EXEC = $(BIN_DIR)/precise_benchmark

# Default target
all: directories comprehensive quick precise

# Create directories
directories:
	@mkdir -p $(BUILD_DIR) $(BIN_DIR)

# Comprehensive permutation tests (10,000+ test cases)
comprehensive: $(COMPREHENSIVE_EXEC)

$(COMPREHENSIVE_EXEC): $(COMPREHENSIVE_TEST) $(PERMUTATION_HEADER)
	@echo "Building comprehensive permutation tests..."
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ $< $(LIBS)
	@echo "✅ Comprehensive tests built successfully"

# Quick permutation tests (80/20 focus)
quick: $(QUICK_EXEC)

$(QUICK_EXEC): $(QUICK_TEST)
	@echo "Building quick permutation tests..."
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ $< $(LIBS)
	@echo "✅ Quick tests built successfully"

# Precise benchmark tests
precise: $(PRECISE_EXEC)

$(PRECISE_EXEC): $(PRECISE_BENCHMARK) $(PERMUTATION_HEADER)
	@echo "Building precise benchmark tests..."
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ $< $(LIBS)
	@echo "✅ Precise benchmarks built successfully"

# Run all tests
test: all
	@echo "Running comprehensive permutation tests..."
	@$(COMPREHENSIVE_EXEC)
	@echo ""
	@echo "Running quick permutation tests..."
	@$(QUICK_EXEC)
	@echo ""
	@echo "Running precise benchmark tests..."
	@$(PRECISE_EXEC)

# Run individual test suites
test-comprehensive: comprehensive
	@echo "Running comprehensive permutation tests..."
	@$(COMPREHENSIVE_EXEC)

test-quick: quick
	@echo "Running quick permutation tests..."
	@$(QUICK_EXEC)

test-precise: precise
	@echo "Running precise benchmark tests..."
	@$(PRECISE_EXEC)

# Performance testing
benchmark: precise
	@echo "Running performance benchmarks..."
	@$(PRECISE_EXEC)

# CJinja specific testing
test-cjinja: all
	@echo "Testing CJinja engine integration..."
	@echo "Running CJinja template permutations..."
	@$(COMPREHENSIVE_EXEC) | grep -A 20 "CJinja"
	@echo ""
	@echo "Running CJinja performance benchmarks..."
	@$(PRECISE_EXEC) | grep -A 30 "CJinja"

# Validation testing
validate: all
	@echo "Running comprehensive validation..."
	@echo "1. Quick validation (80/20)..."
	@$(QUICK_EXEC)
	@echo ""
	@echo "2. Comprehensive validation (10,000+ tests)..."
	@$(COMPREHENSIVE_EXEC)
	@echo ""
	@echo "3. Performance validation..."
	@$(PRECISE_EXEC)

# Clean build artifacts
clean:
	@echo "Cleaning build artifacts..."
	rm -rf $(BUILD_DIR) $(BIN_DIR)
	rm -f *.o *.a
	@echo "✅ Clean complete"

# Install dependencies (if needed)
deps:
	@echo "Checking dependencies..."
	@which gcc > /dev/null || (echo "❌ gcc not found" && exit 1)
	@echo "✅ Dependencies satisfied"

# Help
help:
	@echo "CNS v8 Architecture - Permutation Testing Makefile"
	@echo ""
	@echo "Targets:"
	@echo "  all              - Build all test suites"
	@echo "  comprehensive    - Build comprehensive permutation tests (10,000+ cases)"
	@echo "  quick           - Build quick permutation tests (80/20 focus)"
	@echo "  precise         - Build precise benchmark tests"
	@echo "  test            - Run all test suites"
	@echo "  test-comprehensive - Run comprehensive tests only"
	@echo "  test-quick      - Run quick tests only"
	@echo "  test-precise    - Run precise benchmarks only"
	@echo "  test-cjinja     - Run CJinja-specific tests"
	@echo "  benchmark       - Run performance benchmarks"
	@echo "  validate        - Run full validation suite"
	@echo "  clean           - Clean build artifacts"
	@echo "  deps            - Check dependencies"
	@echo "  help            - Show this help"
	@echo ""
	@echo "Examples:"
	@echo "  make test-quick     # Run 80/20 tests"
	@echo "  make test-cjinja    # Test CJinja engine"
	@echo "  make benchmark      # Performance analysis"

# Phony targets
.PHONY: all directories comprehensive quick precise test test-comprehensive test-quick test-precise test-cjinja benchmark validate clean deps help