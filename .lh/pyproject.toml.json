{
    "sourceFile": "pyproject.toml",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752193428862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752193482295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n [build-system]\n-requires = [\"setuptools>=61.0\", \"wheel\"]\n+requires = [\"setuptools>=69.0\", \"wheel\"]\n build-backend = \"setuptools.build_meta\"\n \n [project]\n name = \"autotel-prototype\"\n@@ -29,48 +29,48 @@\n     \"Topic :: System :: Systems Administration\",\n ]\n requires-python = \">=3.11\"\n dependencies = [\n-    \"SpiffWorkflow>=2.0.0\",\n+    \"SpiffWorkflow>=3.1.1\",\n     \"opentelemetry-api>=1.34.0\",\n     \"opentelemetry-sdk>=1.34.0\",\n     \"opentelemetry-exporter-otlp-proto-http>=1.34.0\",\n     \"opentelemetry-exporter-otlp-proto-grpc>=1.34.0\",\n     \"opentelemetry-instrumentation>=0.55b1\",\n     \"opentelemetry-semantic-conventions>=0.55b1\",\n-    \"linkml-runtime>=1.9.0\",\n+    \"linkml-runtime>=1.9.3\",\n     \"jsonschema>=4.24.0\",\n-    \"marshmallow>=3.26.0\",\n-    \"openai>=1.93.0\",\n-    \"litellm>=1.74.0\",\n-    \"dspy-ai>=2.6.0\",\n-    \"pandas>=2.3.0\",\n-    \"numpy>=2.3.0\",\n-    \"httpx>=0.28.0\",\n-    \"aiohttp>=3.12.0\",\n-    \"python-dotenv>=1.0.0\",\n+    \"marshmallow>=3.21.1\",\n+    \"openai>=1.93.3\",\n+    \"litellm>=1.74.0.post1\",\n+    \"dspy-ai>=2.6.27\",\n+    \"pandas>=2.3.1\",\n+    \"numpy>=2.3.1\",\n+    \"httpx>=0.28.1\",\n+    \"aiohttp>=3.12.13\",\n+    \"python-dotenv>=1.1.1\",\n     \"colorlog>=6.9.0\",\n-    \"click>=8.2.0\",\n-    \"jinja2>=3.1.0\",\n-    \"pyyaml>=6.0.0\",\n+    \"click>=8.2.1\",\n+    \"jinja2>=3.1.6\",\n+    \"pyyaml>=6.0.2\",\n ]\n \n [project.optional-dependencies]\n dev = [\n-    \"pytest>=8.0.0\",\n+    \"pytest>=8.4.1\",\n     \"pytest-cov>=5.0.0\",\n     \"pytest-asyncio>=0.24.0\",\n-    \"black>=24.0.0\",\n+    \"black>=24.4.2\",\n     \"flake8>=7.0.0\",\n     \"mypy>=1.8.0\",\n-    \"isort>=5.13.0\",\n+    \"isort>=5.13.2\",\n ]\n docs = [\n-    \"sphinx>=7.0.0\",\n+    \"sphinx>=7.3.7\",\n     \"sphinx-rtd-theme>=2.0.0\",\n ]\n test = [\n-    \"pytest>=8.0.0\",\n+    \"pytest>=8.4.1\",\n     \"pytest-cov>=5.0.0\",\n     \"pytest-asyncio>=0.24.0\",\n ]\n \n@@ -194,5 +194,5 @@\n ]\n \n [tool.ruff.per-file-ignores]\n \"__init__.py\" = [\"F401\"]\n-\"tests/*\" = [\"B011\"] \n\\ No newline at end of file\n+\"tests/*\" = [\"B011\"]\n"
                }
            ],
            "date": 1752193428862,
            "name": "Commit-0",
            "content": "[build-system]\nrequires = [\"setuptools>=61.0\", \"wheel\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"autotel-prototype\"\nversion = \"0.1.0\"\ndescription = \"Enterprise BPMN 2.0 orchestration engine with zero-touch telemetry integration\"\nreadme = \"README.md\"\nlicense = {text = \"MIT\"}\nauthors = [\n    {name = \"AutoTel Team\", email = \"team@autotel.dev\"}\n]\nmaintainers = [\n    {name = \"AutoTel Team\", email = \"team@autotel.dev\"}\n]\nkeywords = [\"bpmn\", \"workflow\", \"orchestration\", \"telemetry\", \"opentelemetry\", \"enterprise\"]\nclassifiers = [\n    \"Development Status :: 3 - Alpha\",\n    \"Intended Audience :: Developers\",\n    \"Intended Audience :: System Administrators\",\n    \"License :: OSI Approved :: MIT License\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Topic :: Software Development :: Libraries :: Python Modules\",\n    \"Topic :: System :: Monitoring\",\n    \"Topic :: System :: Systems Administration\",\n]\nrequires-python = \">=3.11\"\ndependencies = [\n    \"SpiffWorkflow>=2.0.0\",\n    \"opentelemetry-api>=1.34.0\",\n    \"opentelemetry-sdk>=1.34.0\",\n    \"opentelemetry-exporter-otlp-proto-http>=1.34.0\",\n    \"opentelemetry-exporter-otlp-proto-grpc>=1.34.0\",\n    \"opentelemetry-instrumentation>=0.55b1\",\n    \"opentelemetry-semantic-conventions>=0.55b1\",\n    \"linkml-runtime>=1.9.0\",\n    \"jsonschema>=4.24.0\",\n    \"marshmallow>=3.26.0\",\n    \"openai>=1.93.0\",\n    \"litellm>=1.74.0\",\n    \"dspy-ai>=2.6.0\",\n    \"pandas>=2.3.0\",\n    \"numpy>=2.3.0\",\n    \"httpx>=0.28.0\",\n    \"aiohttp>=3.12.0\",\n    \"python-dotenv>=1.0.0\",\n    \"colorlog>=6.9.0\",\n    \"click>=8.2.0\",\n    \"jinja2>=3.1.0\",\n    \"pyyaml>=6.0.0\",\n]\n\n[project.optional-dependencies]\ndev = [\n    \"pytest>=8.0.0\",\n    \"pytest-cov>=5.0.0\",\n    \"pytest-asyncio>=0.24.0\",\n    \"black>=24.0.0\",\n    \"flake8>=7.0.0\",\n    \"mypy>=1.8.0\",\n    \"isort>=5.13.0\",\n]\ndocs = [\n    \"sphinx>=7.0.0\",\n    \"sphinx-rtd-theme>=2.0.0\",\n]\ntest = [\n    \"pytest>=8.0.0\",\n    \"pytest-cov>=5.0.0\",\n    \"pytest-asyncio>=0.24.0\",\n]\n\n[project.urls]\nHomepage = \"https://github.com/autotel/autotel-prototype\"\nDocumentation = \"https://autotel-prototype.readthedocs.io/\"\nRepository = \"https://github.com/autotel/autotel-prototype.git\"\n\"Bug Tracker\" = \"https://github.com/autotel/autotel-prototype/issues\"\n\"Changelog\" = \"https://github.com/autotel/autotel-prototype/blob/main/CHANGELOG.md\"\n\n[project.scripts]\nautotel = \"bpmn_orchestrator:main\"\n\n[tool.setuptools.packages.find]\nwhere = [\".\"]\ninclude = [\"*\"]\nexclude = [\"tests*\", \"docs*\", \"examples*\"]\n\n[tool.black]\nline-length = 88\ntarget-version = ['py311']\ninclude = '\\.pyi?$'\nextend-exclude = '''\n/(\n  # directories\n  \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | build\n  | dist\n)/\n'''\n\n[tool.isort]\nprofile = \"black\"\nmulti_line_output = 3\nline_length = 88\nknown_first_party = [\"bpmn_orchestrator\", \"autotel_prototype\"]\nknown_third_party = [\"opentelemetry\", \"spiffworkflow\", \"pandas\", \"numpy\"]\n\n[tool.mypy]\npython_version = \"3.11\"\nwarn_return_any = true\nwarn_unused_configs = true\ndisallow_untyped_defs = true\ndisallow_incomplete_defs = true\ncheck_untyped_defs = true\ndisallow_untyped_decorators = true\nno_implicit_optional = true\nwarn_redundant_casts = true\nwarn_unused_ignores = true\nwarn_no_return = true\nwarn_unreachable = true\nstrict_equality = true\n\n[[tool.mypy.overrides]]\nmodule = [\n    \"opentelemetry.*\",\n    \"spiffworkflow.*\",\n    \"pandas.*\",\n    \"numpy.*\",\n]\nignore_missing_imports = true\n\n[tool.pytest.ini_options]\nminversion = \"6.0\"\naddopts = \"-ra -q --strict-markers --strict-config\"\ntestpaths = [\"tests\"]\npython_files = [\"test_*.py\", \"*_test.py\"]\npython_classes = [\"Test*\"]\npython_functions = [\"test_*\"]\nmarkers = [\n    \"slow: marks tests as slow (deselect with '-m \\\"not slow\\\"')\",\n    \"integration: marks tests as integration tests\",\n    \"unit: marks tests as unit tests\",\n]\n\n[tool.coverage.run]\nsource = [\"bpmn_orchestrator\", \"autotel_prototype\"]\nomit = [\n    \"*/tests/*\",\n    \"*/test_*\",\n    \"*/__pycache__/*\",\n    \"*/venv/*\",\n    \"*/env/*\",\n]\n\n[tool.coverage.report]\nexclude_lines = [\n    \"pragma: no cover\",\n    \"def __repr__\",\n    \"if self.debug:\",\n    \"if settings.DEBUG\",\n    \"raise AssertionError\",\n    \"raise NotImplementedError\",\n    \"if 0:\",\n    \"if __name__ == .__main__.:\",\n    \"class .*\\\\bProtocol\\\\):\",\n    \"@(abc\\\\.)?abstractmethod\",\n]\n\n[tool.ruff]\ntarget-version = \"py311\"\nline-length = 88\nselect = [\n    \"E\",  # pycodestyle errors\n    \"W\",  # pycodestyle warnings\n    \"F\",  # pyflakes\n    \"I\",  # isort\n    \"B\",  # flake8-bugbear\n    \"C4\", # flake8-comprehensions\n    \"UP\", # pyupgrade\n]\nignore = [\n    \"E501\",  # line too long, handled by black\n    \"B008\",  # do not perform function calls in argument defaults\n    \"C901\",  # too complex\n]\n\n[tool.ruff.per-file-ignores]\n\"__init__.py\" = [\"F401\"]\n\"tests/*\" = [\"B011\"] "
        }
    ]
}