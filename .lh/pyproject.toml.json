{
    "sourceFile": "pyproject.toml",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1752193428862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752193482295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n [build-system]\n-requires = [\"setuptools>=61.0\", \"wheel\"]\n+requires = [\"setuptools>=69.0\", \"wheel\"]\n build-backend = \"setuptools.build_meta\"\n \n [project]\n name = \"autotel-prototype\"\n@@ -29,48 +29,48 @@\n     \"Topic :: System :: Systems Administration\",\n ]\n requires-python = \">=3.11\"\n dependencies = [\n-    \"SpiffWorkflow>=2.0.0\",\n+    \"SpiffWorkflow>=3.1.1\",\n     \"opentelemetry-api>=1.34.0\",\n     \"opentelemetry-sdk>=1.34.0\",\n     \"opentelemetry-exporter-otlp-proto-http>=1.34.0\",\n     \"opentelemetry-exporter-otlp-proto-grpc>=1.34.0\",\n     \"opentelemetry-instrumentation>=0.55b1\",\n     \"opentelemetry-semantic-conventions>=0.55b1\",\n-    \"linkml-runtime>=1.9.0\",\n+    \"linkml-runtime>=1.9.3\",\n     \"jsonschema>=4.24.0\",\n-    \"marshmallow>=3.26.0\",\n-    \"openai>=1.93.0\",\n-    \"litellm>=1.74.0\",\n-    \"dspy-ai>=2.6.0\",\n-    \"pandas>=2.3.0\",\n-    \"numpy>=2.3.0\",\n-    \"httpx>=0.28.0\",\n-    \"aiohttp>=3.12.0\",\n-    \"python-dotenv>=1.0.0\",\n+    \"marshmallow>=3.21.1\",\n+    \"openai>=1.93.3\",\n+    \"litellm>=1.74.0.post1\",\n+    \"dspy-ai>=2.6.27\",\n+    \"pandas>=2.3.1\",\n+    \"numpy>=2.3.1\",\n+    \"httpx>=0.28.1\",\n+    \"aiohttp>=3.12.13\",\n+    \"python-dotenv>=1.1.1\",\n     \"colorlog>=6.9.0\",\n-    \"click>=8.2.0\",\n-    \"jinja2>=3.1.0\",\n-    \"pyyaml>=6.0.0\",\n+    \"click>=8.2.1\",\n+    \"jinja2>=3.1.6\",\n+    \"pyyaml>=6.0.2\",\n ]\n \n [project.optional-dependencies]\n dev = [\n-    \"pytest>=8.0.0\",\n+    \"pytest>=8.4.1\",\n     \"pytest-cov>=5.0.0\",\n     \"pytest-asyncio>=0.24.0\",\n-    \"black>=24.0.0\",\n+    \"black>=24.4.2\",\n     \"flake8>=7.0.0\",\n     \"mypy>=1.8.0\",\n-    \"isort>=5.13.0\",\n+    \"isort>=5.13.2\",\n ]\n docs = [\n-    \"sphinx>=7.0.0\",\n+    \"sphinx>=7.3.7\",\n     \"sphinx-rtd-theme>=2.0.0\",\n ]\n test = [\n-    \"pytest>=8.0.0\",\n+    \"pytest>=8.4.1\",\n     \"pytest-cov>=5.0.0\",\n     \"pytest-asyncio>=0.24.0\",\n ]\n \n@@ -194,5 +194,5 @@\n ]\n \n [tool.ruff.per-file-ignores]\n \"__init__.py\" = [\"F401\"]\n-\"tests/*\" = [\"B011\"] \n\\ No newline at end of file\n+\"tests/*\" = [\"B011\"]\n"
                },
                {
                    "date": 1752257846070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,74 +6,72 @@\n name = \"autotel-prototype\"\n version = \"0.1.0\"\n description = \"Enterprise BPMN 2.0 orchestration engine with zero-touch telemetry integration\"\n readme = \"README.md\"\n-license = {text = \"MIT\"}\n-authors = [\n-    {name = \"AutoTel Team\", email = \"team@autotel.dev\"}\n+license = { text = \"MIT\" }\n+authors = [{ name = \"AutoTel Team\", email = \"team@autotel.dev\" }]\n+maintainers = [{ name = \"AutoTel Team\", email = \"team@autotel.dev\" }]\n+keywords = [\n+  \"bpmn\",\n+  \"workflow\",\n+  \"orchestration\",\n+  \"telemetry\",\n+  \"opentelemetry\",\n+  \"enterprise\",\n ]\n-maintainers = [\n-    {name = \"AutoTel Team\", email = \"team@autotel.dev\"}\n-]\n-keywords = [\"bpmn\", \"workflow\", \"orchestration\", \"telemetry\", \"opentelemetry\", \"enterprise\"]\n classifiers = [\n-    \"Development Status :: 3 - Alpha\",\n-    \"Intended Audience :: Developers\",\n-    \"Intended Audience :: System Administrators\",\n-    \"License :: OSI Approved :: MIT License\",\n-    \"Operating System :: OS Independent\",\n-    \"Programming Language :: Python :: 3\",\n-    \"Programming Language :: Python :: 3.11\",\n-    \"Programming Language :: Python :: 3.12\",\n-    \"Topic :: Software Development :: Libraries :: Python Modules\",\n-    \"Topic :: System :: Monitoring\",\n-    \"Topic :: System :: Systems Administration\",\n+  \"Development Status :: 3 - Alpha\",\n+  \"Intended Audience :: Developers\",\n+  \"Intended Audience :: System Administrators\",\n+  \"License :: OSI Approved :: MIT License\",\n+  \"Operating System :: OS Independent\",\n+  \"Programming Language :: Python :: 3\",\n+  \"Programming Language :: Python :: 3.11\",\n+  \"Programming Language :: Python :: 3.12\",\n+  \"Topic :: Software Development :: Libraries :: Python Modules\",\n+  \"Topic :: System :: Monitoring\",\n+  \"Topic :: System :: Systems Administration\",\n ]\n requires-python = \">=3.11\"\n dependencies = [\n-    \"SpiffWorkflow>=3.1.1\",\n-    \"opentelemetry-api>=1.34.0\",\n-    \"opentelemetry-sdk>=1.34.0\",\n-    \"opentelemetry-exporter-otlp-proto-http>=1.34.0\",\n-    \"opentelemetry-exporter-otlp-proto-grpc>=1.34.0\",\n-    \"opentelemetry-instrumentation>=0.55b1\",\n-    \"opentelemetry-semantic-conventions>=0.55b1\",\n-    \"linkml-runtime>=1.9.3\",\n-    \"jsonschema>=4.24.0\",\n-    \"marshmallow>=3.21.1\",\n-    \"openai>=1.93.3\",\n-    \"litellm>=1.74.0.post1\",\n-    \"dspy-ai>=2.6.27\",\n-    \"pandas>=2.3.1\",\n-    \"numpy>=2.3.1\",\n-    \"httpx>=0.28.1\",\n-    \"aiohttp>=3.12.13\",\n-    \"python-dotenv>=1.1.1\",\n-    \"colorlog>=6.9.0\",\n-    \"click>=8.2.1\",\n-    \"jinja2>=3.1.6\",\n-    \"pyyaml>=6.0.2\",\n+  \"SpiffWorkflow>=3.1.1\",\n+  \"opentelemetry-api>=1.34.0\",\n+  \"opentelemetry-sdk>=1.34.0\",\n+  \"opentelemetry-exporter-otlp-proto-http>=1.34.0\",\n+  \"opentelemetry-exporter-otlp-proto-grpc>=1.34.0\",\n+  \"opentelemetry-instrumentation>=0.55b1\",\n+  \"opentelemetry-semantic-conventions>=0.55b1\",\n+  \"linkml-runtime>=1.9.3\",\n+  \"jsonschema>=4.24.0\",\n+  \"marshmallow>=3.21.1\",\n+  \"openai>=1.93.3\",\n+  \"litellm>=1.74.0.post1\",\n+  \"dspy-ai>=2.6.27\",\n+  \"pandas>=2.3.1\",\n+  \"numpy>=2.3.1\",\n+  \"httpx>=0.28.1\",\n+  \"aiohttp>=3.12.13\",\n+  \"python-dotenv>=1.1.1\",\n+  \"colorlog>=6.9.0\",\n+  \"click>=8.2.1\",\n+  \"jinja2>=3.1.6\",\n+  \"pyyaml>=6.0.2\",\n+  \"typer[all]>=0.12.0\",\n+  \"rich>=13.0.0\",\n ]\n \n [project.optional-dependencies]\n dev = [\n-    \"pytest>=8.4.1\",\n-    \"pytest-cov>=5.0.0\",\n-    \"pytest-asyncio>=0.24.0\",\n-    \"black>=24.4.2\",\n-    \"flake8>=7.0.0\",\n-    \"mypy>=1.8.0\",\n-    \"isort>=5.13.2\",\n+  \"pytest>=8.4.1\",\n+  \"pytest-cov>=5.0.0\",\n+  \"pytest-asyncio>=0.24.0\",\n+  \"black>=24.4.2\",\n+  \"flake8>=7.0.0\",\n+  \"mypy>=1.8.0\",\n+  \"isort>=5.13.2\",\n ]\n-docs = [\n-    \"sphinx>=7.3.7\",\n-    \"sphinx-rtd-theme>=2.0.0\",\n-]\n-test = [\n-    \"pytest>=8.4.1\",\n-    \"pytest-cov>=5.0.0\",\n-    \"pytest-asyncio>=0.24.0\",\n-]\n+docs = [\"sphinx>=7.3.7\", \"sphinx-rtd-theme>=2.0.0\"]\n+test = [\"pytest>=8.4.1\", \"pytest-cov>=5.0.0\", \"pytest-asyncio>=0.24.0\"]\n \n [project.urls]\n Homepage = \"https://github.com/autotel/autotel-prototype\"\n Documentation = \"https://autotel-prototype.readthedocs.io/\"\n@@ -129,14 +127,9 @@\n warn_unreachable = true\n strict_equality = true\n \n [[tool.mypy.overrides]]\n-module = [\n-    \"opentelemetry.*\",\n-    \"spiffworkflow.*\",\n-    \"pandas.*\",\n-    \"numpy.*\",\n-]\n+module = [\"opentelemetry.*\", \"spiffworkflow.*\", \"pandas.*\", \"numpy.*\"]\n ignore_missing_imports = true\n \n [tool.pytest.ini_options]\n minversion = \"6.0\"\n@@ -145,53 +138,47 @@\n python_files = [\"test_*.py\", \"*_test.py\"]\n python_classes = [\"Test*\"]\n python_functions = [\"test_*\"]\n markers = [\n-    \"slow: marks tests as slow (deselect with '-m \\\"not slow\\\"')\",\n-    \"integration: marks tests as integration tests\",\n-    \"unit: marks tests as unit tests\",\n+  \"slow: marks tests as slow (deselect with '-m \\\"not slow\\\"')\",\n+  \"integration: marks tests as integration tests\",\n+  \"unit: marks tests as unit tests\",\n ]\n \n [tool.coverage.run]\n source = [\"bpmn_orchestrator\", \"autotel_prototype\"]\n-omit = [\n-    \"*/tests/*\",\n-    \"*/test_*\",\n-    \"*/__pycache__/*\",\n-    \"*/venv/*\",\n-    \"*/env/*\",\n-]\n+omit = [\"*/tests/*\", \"*/test_*\", \"*/__pycache__/*\", \"*/venv/*\", \"*/env/*\"]\n \n [tool.coverage.report]\n exclude_lines = [\n-    \"pragma: no cover\",\n-    \"def __repr__\",\n-    \"if self.debug:\",\n-    \"if settings.DEBUG\",\n-    \"raise AssertionError\",\n-    \"raise NotImplementedError\",\n-    \"if 0:\",\n-    \"if __name__ == .__main__.:\",\n-    \"class .*\\\\bProtocol\\\\):\",\n-    \"@(abc\\\\.)?abstractmethod\",\n+  \"pragma: no cover\",\n+  \"def __repr__\",\n+  \"if self.debug:\",\n+  \"if settings.DEBUG\",\n+  \"raise AssertionError\",\n+  \"raise NotImplementedError\",\n+  \"if 0:\",\n+  \"if __name__ == .__main__.:\",\n+  \"class .*\\\\bProtocol\\\\):\",\n+  \"@(abc\\\\.)?abstractmethod\",\n ]\n \n [tool.ruff]\n target-version = \"py311\"\n line-length = 88\n select = [\n-    \"E\",  # pycodestyle errors\n-    \"W\",  # pycodestyle warnings\n-    \"F\",  # pyflakes\n-    \"I\",  # isort\n-    \"B\",  # flake8-bugbear\n-    \"C4\", # flake8-comprehensions\n-    \"UP\", # pyupgrade\n+  \"E\",  # pycodestyle errors\n+  \"W\",  # pycodestyle warnings\n+  \"F\",  # pyflakes\n+  \"I\",  # isort\n+  \"B\",  # flake8-bugbear\n+  \"C4\", # flake8-comprehensions\n+  \"UP\", # pyupgrade\n ]\n ignore = [\n-    \"E501\",  # line too long, handled by black\n-    \"B008\",  # do not perform function calls in argument defaults\n-    \"C901\",  # too complex\n+  \"E501\", # line too long, handled by black\n+  \"B008\", # do not perform function calls in argument defaults\n+  \"C901\", # too complex\n ]\n \n [tool.ruff.per-file-ignores]\n \"__init__.py\" = [\"F401\"]\n"
                },
                {
                    "date": 1752257851801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,185 @@\n+[build-system]\n+requires = [\"setuptools>=69.0\", \"wheel\"]\n+build-backend = \"setuptools.build_meta\"\n+\n+[project]\n+name = \"autotel-prototype\"\n+version = \"0.1.0\"\n+description = \"Enterprise BPMN 2.0 orchestration engine with zero-touch telemetry integration\"\n+readme = \"README.md\"\n+license = { text = \"MIT\" }\n+authors = [{ name = \"AutoTel Team\", email = \"team@autotel.dev\" }]\n+maintainers = [{ name = \"AutoTel Team\", email = \"team@autotel.dev\" }]\n+keywords = [\n+  \"bpmn\",\n+  \"workflow\",\n+  \"orchestration\",\n+  \"telemetry\",\n+  \"opentelemetry\",\n+  \"enterprise\",\n+]\n+classifiers = [\n+  \"Development Status :: 3 - Alpha\",\n+  \"Intended Audience :: Developers\",\n+  \"Intended Audience :: System Administrators\",\n+  \"License :: OSI Approved :: MIT License\",\n+  \"Operating System :: OS Independent\",\n+  \"Programming Language :: Python :: 3\",\n+  \"Programming Language :: Python :: 3.11\",\n+  \"Programming Language :: Python :: 3.12\",\n+  \"Topic :: Software Development :: Libraries :: Python Modules\",\n+  \"Topic :: System :: Monitoring\",\n+  \"Topic :: System :: Systems Administration\",\n+]\n+requires-python = \">=3.11\"\n+dependencies = [\n+  \"SpiffWorkflow>=3.1.1\",\n+  \"opentelemetry-api>=1.34.0\",\n+  \"opentelemetry-sdk>=1.34.0\",\n+  \"opentelemetry-exporter-otlp-proto-http>=1.34.0\",\n+  \"opentelemetry-exporter-otlp-proto-grpc>=1.34.0\",\n+  \"opentelemetry-instrumentation>=0.55b1\",\n+  \"opentelemetry-semantic-conventions>=0.55b1\",\n+  \"linkml-runtime>=1.9.3\",\n+  \"jsonschema>=4.24.0\",\n+  \"marshmallow>=3.21.1\",\n+  \"openai>=1.93.3\",\n+  \"litellm>=1.74.0.post1\",\n+  \"dspy-ai>=2.6.27\",\n+  \"pandas>=2.3.1\",\n+  \"numpy>=2.3.1\",\n+  \"httpx>=0.28.1\",\n+  \"aiohttp>=3.12.13\",\n+  \"python-dotenv>=1.1.1\",\n+  \"colorlog>=6.9.0\",\n+  \"click>=8.2.1\",\n+  \"jinja2>=3.1.6\",\n+  \"pyyaml>=6.0.2\",\n+  \"typer[all]>=0.12.0\",\n+  \"rich>=13.0.0\",\n+]\n+\n+[project.optional-dependencies]\n+dev = [\n+  \"pytest>=8.4.1\",\n+  \"pytest-cov>=5.0.0\",\n+  \"pytest-asyncio>=0.24.0\",\n+  \"black>=24.4.2\",\n+  \"flake8>=7.0.0\",\n+  \"mypy>=1.8.0\",\n+  \"isort>=5.13.2\",\n+]\n+docs = [\"sphinx>=7.3.7\", \"sphinx-rtd-theme>=2.0.0\"]\n+test = [\"pytest>=8.4.1\", \"pytest-cov>=5.0.0\", \"pytest-asyncio>=0.24.0\"]\n+\n+[project.urls]\n+Homepage = \"https://github.com/autotel/autotel-prototype\"\n+Documentation = \"https://autotel-prototype.readthedocs.io/\"\n+Repository = \"https://github.com/autotel/autotel-prototype.git\"\n+\"Bug Tracker\" = \"https://github.com/autotel/autotel-prototype/issues\"\n+\"Changelog\" = \"https://github.com/autotel/autotel-prototype/blob/main/CHANGELOG.md\"\n+\n+[project.scripts]\n+autotel = \"autotel_cli:app\"\n+\n+[tool.setuptools.packages.find]\n+where = [\".\"]\n+include = [\"*\"]\n+exclude = [\"tests*\", \"docs*\", \"examples*\"]\n+\n+[tool.black]\n+line-length = 88\n+target-version = ['py311']\n+include = '\\.pyi?$'\n+extend-exclude = '''\n+/(\n+  # directories\n+  \\.eggs\n+  | \\.git\n+  | \\.hg\n+  | \\.mypy_cache\n+  | \\.tox\n+  | \\.venv\n+  | build\n+  | dist\n+)/\n+'''\n+\n+[tool.isort]\n+profile = \"black\"\n+multi_line_output = 3\n+line_length = 88\n+known_first_party = [\"bpmn_orchestrator\", \"autotel_prototype\"]\n+known_third_party = [\"opentelemetry\", \"spiffworkflow\", \"pandas\", \"numpy\"]\n+\n+[tool.mypy]\n+python_version = \"3.11\"\n+warn_return_any = true\n+warn_unused_configs = true\n+disallow_untyped_defs = true\n+disallow_incomplete_defs = true\n+check_untyped_defs = true\n+disallow_untyped_decorators = true\n+no_implicit_optional = true\n+warn_redundant_casts = true\n+warn_unused_ignores = true\n+warn_no_return = true\n+warn_unreachable = true\n+strict_equality = true\n+\n+[[tool.mypy.overrides]]\n+module = [\"opentelemetry.*\", \"spiffworkflow.*\", \"pandas.*\", \"numpy.*\"]\n+ignore_missing_imports = true\n+\n+[tool.pytest.ini_options]\n+minversion = \"6.0\"\n+addopts = \"-ra -q --strict-markers --strict-config\"\n+testpaths = [\"tests\"]\n+python_files = [\"test_*.py\", \"*_test.py\"]\n+python_classes = [\"Test*\"]\n+python_functions = [\"test_*\"]\n+markers = [\n+  \"slow: marks tests as slow (deselect with '-m \\\"not slow\\\"')\",\n+  \"integration: marks tests as integration tests\",\n+  \"unit: marks tests as unit tests\",\n+]\n+\n+[tool.coverage.run]\n+source = [\"bpmn_orchestrator\", \"autotel_prototype\"]\n+omit = [\"*/tests/*\", \"*/test_*\", \"*/__pycache__/*\", \"*/venv/*\", \"*/env/*\"]\n+\n+[tool.coverage.report]\n+exclude_lines = [\n+  \"pragma: no cover\",\n+  \"def __repr__\",\n+  \"if self.debug:\",\n+  \"if settings.DEBUG\",\n+  \"raise AssertionError\",\n+  \"raise NotImplementedError\",\n+  \"if 0:\",\n+  \"if __name__ == .__main__.:\",\n+  \"class .*\\\\bProtocol\\\\):\",\n+  \"@(abc\\\\.)?abstractmethod\",\n+]\n+\n+[tool.ruff]\n+target-version = \"py311\"\n+line-length = 88\n+select = [\n+  \"E\",  # pycodestyle errors\n+  \"W\",  # pycodestyle warnings\n+  \"F\",  # pyflakes\n+  \"I\",  # isort\n+  \"B\",  # flake8-bugbear\n+  \"C4\", # flake8-comprehensions\n+  \"UP\", # pyupgrade\n+]\n+ignore = [\n+  \"E501\", # line too long, handled by black\n+  \"B008\", # do not perform function calls in argument defaults\n+  \"C901\", # too complex\n+]\n+\n+[tool.ruff.per-file-ignores]\n+\"__init__.py\" = [\"F401\"]\n+\"tests/*\" = [\"B011\"]\n"
                },
                {
                    "date": 1752258733068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,9 @@\n   \"click>=8.2.1\",\n   \"jinja2>=3.1.6\",\n   \"pyyaml>=6.0.2\",\n   \"typer[all]>=0.12.0\",\n+  \"pydantic>=2.8.0\",\n   \"rich>=13.0.0\",\n ]\n \n [project.optional-dependencies]\n"
                },
                {
                    "date": 1752258857749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,8 +82,11 @@\n \n [project.scripts]\n autotel = \"autotel_cli:app\"\n \n+[tool.uv.scripts]\n+autotel = \"python autotel_cli.py\"\n+\n [tool.setuptools.packages.find]\n where = [\".\"]\n include = [\"*\"]\n exclude = [\"tests*\", \"docs*\", \"examples*\"]\n"
                },
                {
                    "date": 1752258871664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,186 @@\n+[build-system]\n+requires = [\"setuptools>=69.0\", \"wheel\"]\n+build-backend = \"setuptools.build_meta\"\n+\n+[project]\n+name = \"autotel-prototype\"\n+version = \"0.1.0\"\n+description = \"Enterprise BPMN 2.0 orchestration engine with zero-touch telemetry integration\"\n+readme = \"README.md\"\n+license = { text = \"MIT\" }\n+authors = [{ name = \"AutoTel Team\", email = \"team@autotel.dev\" }]\n+maintainers = [{ name = \"AutoTel Team\", email = \"team@autotel.dev\" }]\n+keywords = [\n+  \"bpmn\",\n+  \"workflow\",\n+  \"orchestration\",\n+  \"telemetry\",\n+  \"opentelemetry\",\n+  \"enterprise\",\n+]\n+classifiers = [\n+  \"Development Status :: 3 - Alpha\",\n+  \"Intended Audience :: Developers\",\n+  \"Intended Audience :: System Administrators\",\n+  \"License :: OSI Approved :: MIT License\",\n+  \"Operating System :: OS Independent\",\n+  \"Programming Language :: Python :: 3\",\n+  \"Programming Language :: Python :: 3.11\",\n+  \"Programming Language :: Python :: 3.12\",\n+  \"Topic :: Software Development :: Libraries :: Python Modules\",\n+  \"Topic :: System :: Monitoring\",\n+  \"Topic :: System :: Systems Administration\",\n+]\n+requires-python = \">=3.11\"\n+dependencies = [\n+  \"SpiffWorkflow>=3.1.1\",\n+  \"opentelemetry-api>=1.34.0\",\n+  \"opentelemetry-sdk>=1.34.0\",\n+  \"opentelemetry-exporter-otlp-proto-http>=1.34.0\",\n+  \"opentelemetry-exporter-otlp-proto-grpc>=1.34.0\",\n+  \"opentelemetry-instrumentation>=0.55b1\",\n+  \"opentelemetry-semantic-conventions>=0.55b1\",\n+  \"linkml-runtime>=1.9.3\",\n+  \"jsonschema>=4.24.0\",\n+  \"marshmallow>=3.21.1\",\n+  \"openai>=1.93.3\",\n+  \"litellm>=1.74.0.post1\",\n+  \"dspy-ai>=2.6.27\",\n+  \"pandas>=2.3.1\",\n+  \"numpy>=2.3.1\",\n+  \"httpx>=0.28.1\",\n+  \"aiohttp>=3.12.13\",\n+  \"python-dotenv>=1.1.1\",\n+  \"colorlog>=6.9.0\",\n+  \"click>=8.2.1\",\n+  \"jinja2>=3.1.6\",\n+  \"pyyaml>=6.0.2\",\n+  \"typer[all]>=0.12.0\",\n+  \"pydantic>=2.8.0\",\n+  \"rich>=13.0.0\",\n+]\n+\n+[project.optional-dependencies]\n+dev = [\n+  \"pytest>=8.4.1\",\n+  \"pytest-cov>=5.0.0\",\n+  \"pytest-asyncio>=0.24.0\",\n+  \"black>=24.4.2\",\n+  \"flake8>=7.0.0\",\n+  \"mypy>=1.8.0\",\n+  \"isort>=5.13.2\",\n+]\n+docs = [\"sphinx>=7.3.7\", \"sphinx-rtd-theme>=2.0.0\"]\n+test = [\"pytest>=8.4.1\", \"pytest-cov>=5.0.0\", \"pytest-asyncio>=0.24.0\"]\n+\n+[project.urls]\n+Homepage = \"https://github.com/autotel/autotel-prototype\"\n+Documentation = \"https://autotel-prototype.readthedocs.io/\"\n+Repository = \"https://github.com/autotel/autotel-prototype.git\"\n+\"Bug Tracker\" = \"https://github.com/autotel/autotel-prototype/issues\"\n+\"Changelog\" = \"https://github.com/autotel/autotel-prototype/blob/main/CHANGELOG.md\"\n+\n+[project.scripts]\n+autotel = \"autotel_cli:app\"\n+\n+[tool.setuptools.packages.find]\n+where = [\".\"]\n+include = [\"*\"]\n+exclude = [\"tests*\", \"docs*\", \"examples*\"]\n+\n+[tool.black]\n+line-length = 88\n+target-version = ['py311']\n+include = '\\.pyi?$'\n+extend-exclude = '''\n+/(\n+  # directories\n+  \\.eggs\n+  | \\.git\n+  | \\.hg\n+  | \\.mypy_cache\n+  | \\.tox\n+  | \\.venv\n+  | build\n+  | dist\n+)/\n+'''\n+\n+[tool.isort]\n+profile = \"black\"\n+multi_line_output = 3\n+line_length = 88\n+known_first_party = [\"bpmn_orchestrator\", \"autotel_prototype\"]\n+known_third_party = [\"opentelemetry\", \"spiffworkflow\", \"pandas\", \"numpy\"]\n+\n+[tool.mypy]\n+python_version = \"3.11\"\n+warn_return_any = true\n+warn_unused_configs = true\n+disallow_untyped_defs = true\n+disallow_incomplete_defs = true\n+check_untyped_defs = true\n+disallow_untyped_decorators = true\n+no_implicit_optional = true\n+warn_redundant_casts = true\n+warn_unused_ignores = true\n+warn_no_return = true\n+warn_unreachable = true\n+strict_equality = true\n+\n+[[tool.mypy.overrides]]\n+module = [\"opentelemetry.*\", \"spiffworkflow.*\", \"pandas.*\", \"numpy.*\"]\n+ignore_missing_imports = true\n+\n+[tool.pytest.ini_options]\n+minversion = \"6.0\"\n+addopts = \"-ra -q --strict-markers --strict-config\"\n+testpaths = [\"tests\"]\n+python_files = [\"test_*.py\", \"*_test.py\"]\n+python_classes = [\"Test*\"]\n+python_functions = [\"test_*\"]\n+markers = [\n+  \"slow: marks tests as slow (deselect with '-m \\\"not slow\\\"')\",\n+  \"integration: marks tests as integration tests\",\n+  \"unit: marks tests as unit tests\",\n+]\n+\n+[tool.coverage.run]\n+source = [\"bpmn_orchestrator\", \"autotel_prototype\"]\n+omit = [\"*/tests/*\", \"*/test_*\", \"*/__pycache__/*\", \"*/venv/*\", \"*/env/*\"]\n+\n+[tool.coverage.report]\n+exclude_lines = [\n+  \"pragma: no cover\",\n+  \"def __repr__\",\n+  \"if self.debug:\",\n+  \"if settings.DEBUG\",\n+  \"raise AssertionError\",\n+  \"raise NotImplementedError\",\n+  \"if 0:\",\n+  \"if __name__ == .__main__.:\",\n+  \"class .*\\\\bProtocol\\\\):\",\n+  \"@(abc\\\\.)?abstractmethod\",\n+]\n+\n+[tool.ruff]\n+target-version = \"py311\"\n+line-length = 88\n+select = [\n+  \"E\",  # pycodestyle errors\n+  \"W\",  # pycodestyle warnings\n+  \"F\",  # pyflakes\n+  \"I\",  # isort\n+  \"B\",  # flake8-bugbear\n+  \"C4\", # flake8-comprehensions\n+  \"UP\", # pyupgrade\n+]\n+ignore = [\n+  \"E501\", # line too long, handled by black\n+  \"B008\", # do not perform function calls in argument defaults\n+  \"C901\", # too complex\n+]\n+\n+[tool.ruff.per-file-ignores]\n+\"__init__.py\" = [\"F401\"]\n+\"tests/*\" = [\"B011\"]\n"
                },
                {
                    "date": 1752258882584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,186 @@\n+[build-system]\n+requires = [\"setuptools>=69.0\", \"wheel\"]\n+build-backend = \"setuptools.build_meta\"\n+\n+[project]\n+name = \"autotel-prototype\"\n+version = \"0.1.0\"\n+description = \"Enterprise BPMN 2.0 orchestration engine with zero-touch telemetry integration\"\n+readme = \"README.md\"\n+license = { text = \"MIT\" }\n+authors = [{ name = \"AutoTel Team\", email = \"team@autotel.dev\" }]\n+maintainers = [{ name = \"AutoTel Team\", email = \"team@autotel.dev\" }]\n+keywords = [\n+  \"bpmn\",\n+  \"workflow\",\n+  \"orchestration\",\n+  \"telemetry\",\n+  \"opentelemetry\",\n+  \"enterprise\",\n+]\n+classifiers = [\n+  \"Development Status :: 3 - Alpha\",\n+  \"Intended Audience :: Developers\",\n+  \"Intended Audience :: System Administrators\",\n+  \"License :: OSI Approved :: MIT License\",\n+  \"Operating System :: OS Independent\",\n+  \"Programming Language :: Python :: 3\",\n+  \"Programming Language :: Python :: 3.11\",\n+  \"Programming Language :: Python :: 3.12\",\n+  \"Topic :: Software Development :: Libraries :: Python Modules\",\n+  \"Topic :: System :: Monitoring\",\n+  \"Topic :: System :: Systems Administration\",\n+]\n+requires-python = \">=3.11\"\n+dependencies = [\n+  \"SpiffWorkflow>=3.1.1\",\n+  \"opentelemetry-api>=1.34.0\",\n+  \"opentelemetry-sdk>=1.34.0\",\n+  \"opentelemetry-exporter-otlp-proto-http>=1.34.0\",\n+  \"opentelemetry-exporter-otlp-proto-grpc>=1.34.0\",\n+  \"opentelemetry-instrumentation>=0.55b1\",\n+  \"opentelemetry-semantic-conventions>=0.55b1\",\n+  \"linkml-runtime>=1.9.3\",\n+  \"jsonschema>=4.24.0\",\n+  \"marshmallow>=3.21.1\",\n+  \"openai>=1.93.3\",\n+  \"litellm>=1.74.0.post1\",\n+  \"dspy-ai>=2.6.27\",\n+  \"pandas>=2.3.1\",\n+  \"numpy>=2.3.1\",\n+  \"httpx>=0.28.1\",\n+  \"aiohttp>=3.12.13\",\n+  \"python-dotenv>=1.1.1\",\n+  \"colorlog>=6.9.0\",\n+  \"click>=8.2.1\",\n+  \"jinja2>=3.1.6\",\n+  \"pyyaml>=6.0.2\",\n+  \"typer[all]>=0.12.0\",\n+  \"pydantic>=2.8.0\",\n+  \"rich>=13.0.0\",\n+]\n+\n+[project.optional-dependencies]\n+dev = [\n+  \"pytest>=8.4.1\",\n+  \"pytest-cov>=5.0.0\",\n+  \"pytest-asyncio>=0.24.0\",\n+  \"black>=24.4.2\",\n+  \"flake8>=7.0.0\",\n+  \"mypy>=1.8.0\",\n+  \"isort>=5.13.2\",\n+]\n+docs = [\"sphinx>=7.3.7\", \"sphinx-rtd-theme>=2.0.0\"]\n+test = [\"pytest>=8.4.1\", \"pytest-cov>=5.0.0\", \"pytest-asyncio>=0.24.0\"]\n+\n+[project.urls]\n+Homepage = \"https://github.com/autotel/autotel-prototype\"\n+Documentation = \"https://autotel-prototype.readthedocs.io/\"\n+Repository = \"https://github.com/autotel/autotel-prototype.git\"\n+\"Bug Tracker\" = \"https://github.com/autotel/autotel-prototype/issues\"\n+\"Changelog\" = \"https://github.com/autotel/autotel-prototype/blob/main/CHANGELOG.md\"\n+\n+[project.scripts]\n+autotel = \"autotel.cli:app\"\n+\n+[tool.setuptools.packages.find]\n+where = [\".\"]\n+include = [\"*\"]\n+exclude = [\"tests*\", \"docs*\", \"examples*\"]\n+\n+[tool.black]\n+line-length = 88\n+target-version = ['py311']\n+include = '\\.pyi?$'\n+extend-exclude = '''\n+/(\n+  # directories\n+  \\.eggs\n+  | \\.git\n+  | \\.hg\n+  | \\.mypy_cache\n+  | \\.tox\n+  | \\.venv\n+  | build\n+  | dist\n+)/\n+'''\n+\n+[tool.isort]\n+profile = \"black\"\n+multi_line_output = 3\n+line_length = 88\n+known_first_party = [\"bpmn_orchestrator\", \"autotel_prototype\"]\n+known_third_party = [\"opentelemetry\", \"spiffworkflow\", \"pandas\", \"numpy\"]\n+\n+[tool.mypy]\n+python_version = \"3.11\"\n+warn_return_any = true\n+warn_unused_configs = true\n+disallow_untyped_defs = true\n+disallow_incomplete_defs = true\n+check_untyped_defs = true\n+disallow_untyped_decorators = true\n+no_implicit_optional = true\n+warn_redundant_casts = true\n+warn_unused_ignores = true\n+warn_no_return = true\n+warn_unreachable = true\n+strict_equality = true\n+\n+[[tool.mypy.overrides]]\n+module = [\"opentelemetry.*\", \"spiffworkflow.*\", \"pandas.*\", \"numpy.*\"]\n+ignore_missing_imports = true\n+\n+[tool.pytest.ini_options]\n+minversion = \"6.0\"\n+addopts = \"-ra -q --strict-markers --strict-config\"\n+testpaths = [\"tests\"]\n+python_files = [\"test_*.py\", \"*_test.py\"]\n+python_classes = [\"Test*\"]\n+python_functions = [\"test_*\"]\n+markers = [\n+  \"slow: marks tests as slow (deselect with '-m \\\"not slow\\\"')\",\n+  \"integration: marks tests as integration tests\",\n+  \"unit: marks tests as unit tests\",\n+]\n+\n+[tool.coverage.run]\n+source = [\"bpmn_orchestrator\", \"autotel_prototype\"]\n+omit = [\"*/tests/*\", \"*/test_*\", \"*/__pycache__/*\", \"*/venv/*\", \"*/env/*\"]\n+\n+[tool.coverage.report]\n+exclude_lines = [\n+  \"pragma: no cover\",\n+  \"def __repr__\",\n+  \"if self.debug:\",\n+  \"if settings.DEBUG\",\n+  \"raise AssertionError\",\n+  \"raise NotImplementedError\",\n+  \"if 0:\",\n+  \"if __name__ == .__main__.:\",\n+  \"class .*\\\\bProtocol\\\\):\",\n+  \"@(abc\\\\.)?abstractmethod\",\n+]\n+\n+[tool.ruff]\n+target-version = \"py311\"\n+line-length = 88\n+select = [\n+  \"E\",  # pycodestyle errors\n+  \"W\",  # pycodestyle warnings\n+  \"F\",  # pyflakes\n+  \"I\",  # isort\n+  \"B\",  # flake8-bugbear\n+  \"C4\", # flake8-comprehensions\n+  \"UP\", # pyupgrade\n+]\n+ignore = [\n+  \"E501\", # line too long, handled by black\n+  \"B008\", # do not perform function calls in argument defaults\n+  \"C901\", # too complex\n+]\n+\n+[tool.ruff.per-file-ignores]\n+\"__init__.py\" = [\"F401\"]\n+\"tests/*\" = [\"B011\"]\n"
                }
            ],
            "date": 1752193428862,
            "name": "Commit-0",
            "content": "[build-system]\nrequires = [\"setuptools>=61.0\", \"wheel\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"autotel-prototype\"\nversion = \"0.1.0\"\ndescription = \"Enterprise BPMN 2.0 orchestration engine with zero-touch telemetry integration\"\nreadme = \"README.md\"\nlicense = {text = \"MIT\"}\nauthors = [\n    {name = \"AutoTel Team\", email = \"team@autotel.dev\"}\n]\nmaintainers = [\n    {name = \"AutoTel Team\", email = \"team@autotel.dev\"}\n]\nkeywords = [\"bpmn\", \"workflow\", \"orchestration\", \"telemetry\", \"opentelemetry\", \"enterprise\"]\nclassifiers = [\n    \"Development Status :: 3 - Alpha\",\n    \"Intended Audience :: Developers\",\n    \"Intended Audience :: System Administrators\",\n    \"License :: OSI Approved :: MIT License\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Topic :: Software Development :: Libraries :: Python Modules\",\n    \"Topic :: System :: Monitoring\",\n    \"Topic :: System :: Systems Administration\",\n]\nrequires-python = \">=3.11\"\ndependencies = [\n    \"SpiffWorkflow>=2.0.0\",\n    \"opentelemetry-api>=1.34.0\",\n    \"opentelemetry-sdk>=1.34.0\",\n    \"opentelemetry-exporter-otlp-proto-http>=1.34.0\",\n    \"opentelemetry-exporter-otlp-proto-grpc>=1.34.0\",\n    \"opentelemetry-instrumentation>=0.55b1\",\n    \"opentelemetry-semantic-conventions>=0.55b1\",\n    \"linkml-runtime>=1.9.0\",\n    \"jsonschema>=4.24.0\",\n    \"marshmallow>=3.26.0\",\n    \"openai>=1.93.0\",\n    \"litellm>=1.74.0\",\n    \"dspy-ai>=2.6.0\",\n    \"pandas>=2.3.0\",\n    \"numpy>=2.3.0\",\n    \"httpx>=0.28.0\",\n    \"aiohttp>=3.12.0\",\n    \"python-dotenv>=1.0.0\",\n    \"colorlog>=6.9.0\",\n    \"click>=8.2.0\",\n    \"jinja2>=3.1.0\",\n    \"pyyaml>=6.0.0\",\n]\n\n[project.optional-dependencies]\ndev = [\n    \"pytest>=8.0.0\",\n    \"pytest-cov>=5.0.0\",\n    \"pytest-asyncio>=0.24.0\",\n    \"black>=24.0.0\",\n    \"flake8>=7.0.0\",\n    \"mypy>=1.8.0\",\n    \"isort>=5.13.0\",\n]\ndocs = [\n    \"sphinx>=7.0.0\",\n    \"sphinx-rtd-theme>=2.0.0\",\n]\ntest = [\n    \"pytest>=8.0.0\",\n    \"pytest-cov>=5.0.0\",\n    \"pytest-asyncio>=0.24.0\",\n]\n\n[project.urls]\nHomepage = \"https://github.com/autotel/autotel-prototype\"\nDocumentation = \"https://autotel-prototype.readthedocs.io/\"\nRepository = \"https://github.com/autotel/autotel-prototype.git\"\n\"Bug Tracker\" = \"https://github.com/autotel/autotel-prototype/issues\"\n\"Changelog\" = \"https://github.com/autotel/autotel-prototype/blob/main/CHANGELOG.md\"\n\n[project.scripts]\nautotel = \"bpmn_orchestrator:main\"\n\n[tool.setuptools.packages.find]\nwhere = [\".\"]\ninclude = [\"*\"]\nexclude = [\"tests*\", \"docs*\", \"examples*\"]\n\n[tool.black]\nline-length = 88\ntarget-version = ['py311']\ninclude = '\\.pyi?$'\nextend-exclude = '''\n/(\n  # directories\n  \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | build\n  | dist\n)/\n'''\n\n[tool.isort]\nprofile = \"black\"\nmulti_line_output = 3\nline_length = 88\nknown_first_party = [\"bpmn_orchestrator\", \"autotel_prototype\"]\nknown_third_party = [\"opentelemetry\", \"spiffworkflow\", \"pandas\", \"numpy\"]\n\n[tool.mypy]\npython_version = \"3.11\"\nwarn_return_any = true\nwarn_unused_configs = true\ndisallow_untyped_defs = true\ndisallow_incomplete_defs = true\ncheck_untyped_defs = true\ndisallow_untyped_decorators = true\nno_implicit_optional = true\nwarn_redundant_casts = true\nwarn_unused_ignores = true\nwarn_no_return = true\nwarn_unreachable = true\nstrict_equality = true\n\n[[tool.mypy.overrides]]\nmodule = [\n    \"opentelemetry.*\",\n    \"spiffworkflow.*\",\n    \"pandas.*\",\n    \"numpy.*\",\n]\nignore_missing_imports = true\n\n[tool.pytest.ini_options]\nminversion = \"6.0\"\naddopts = \"-ra -q --strict-markers --strict-config\"\ntestpaths = [\"tests\"]\npython_files = [\"test_*.py\", \"*_test.py\"]\npython_classes = [\"Test*\"]\npython_functions = [\"test_*\"]\nmarkers = [\n    \"slow: marks tests as slow (deselect with '-m \\\"not slow\\\"')\",\n    \"integration: marks tests as integration tests\",\n    \"unit: marks tests as unit tests\",\n]\n\n[tool.coverage.run]\nsource = [\"bpmn_orchestrator\", \"autotel_prototype\"]\nomit = [\n    \"*/tests/*\",\n    \"*/test_*\",\n    \"*/__pycache__/*\",\n    \"*/venv/*\",\n    \"*/env/*\",\n]\n\n[tool.coverage.report]\nexclude_lines = [\n    \"pragma: no cover\",\n    \"def __repr__\",\n    \"if self.debug:\",\n    \"if settings.DEBUG\",\n    \"raise AssertionError\",\n    \"raise NotImplementedError\",\n    \"if 0:\",\n    \"if __name__ == .__main__.:\",\n    \"class .*\\\\bProtocol\\\\):\",\n    \"@(abc\\\\.)?abstractmethod\",\n]\n\n[tool.ruff]\ntarget-version = \"py311\"\nline-length = 88\nselect = [\n    \"E\",  # pycodestyle errors\n    \"W\",  # pycodestyle warnings\n    \"F\",  # pyflakes\n    \"I\",  # isort\n    \"B\",  # flake8-bugbear\n    \"C4\", # flake8-comprehensions\n    \"UP\", # pyupgrade\n]\nignore = [\n    \"E501\",  # line too long, handled by black\n    \"B008\",  # do not perform function calls in argument defaults\n    \"C901\",  # too complex\n]\n\n[tool.ruff.per-file-ignores]\n\"__init__.py\" = [\"F401\"]\n\"tests/*\" = [\"B011\"] "
        }
    ]
}